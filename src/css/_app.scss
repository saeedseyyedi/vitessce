@mixin app($theme) {

    .react-grid-layout {
        @if $theme == light {
            background-color: #FFFFFF;
        } @else if $theme == dark {
            background-color: #333333;
        }
    }

    /* Flex grid items */
    .react-grid-item {
        /* emulate bootstrap .flex-column: */
        -webkit-box-orient: vertical!important;
        -webkit-box-direction: normal!important;
        -ms-flex-direction: column!important;
        flex-direction: column!important;

        /* emulate bootstrap .d-flex: */
        display: -webkit-box!important;
        display: -ms-flexbox!important;
        display: flex!important;

        /* So the resize handle position looks correct: */
        padding-right: 10px;
    }

    /* Fix grid title rendering on Safari 12.0.
        Inspired by https://stackoverflow.com/questions/32689686/overlapping-css-flexbox-items-in-safari */
    .d-flex {
        flex-shrink: 0;
    }

    /* Styling for closing button on the grid items */
    .close-pane-button {
        border: none;
        font-family: Ampersand;
        margin-left: .5em;
        background: none;

        @if $theme == light {
            color: #333333;
        } @else if $theme == dark {
            color: #000000;
        }
    }

    /* Tool styles */
    .title {
        @if $theme == light {
            color: #333333;
        } @else if $theme == dark {
            color: #D3D3D3;
        }
    }

    .card {
        @if $theme == light {
            border: 1px solid rgba(241, 241, 241, 0.125);
        } @else if $theme == dark {
            border: 1px solid rgba(0, 0, 0, 0.125);
        }
    }

    .bg-primary {
        @if $theme == light {
            background-color: #F1F1F1;
            color: #222222;
        } @else if $theme == dark {
            background-color: #222222;
            color: #D3D3D3;
        }

        a {
            @if $theme == light {
                color:#0074D9;
            } @else if $theme == dark {
                color: #9bb7d6;
            }
        }
    }

    .bg-secondary {
        @if $theme == light {
            background-color: #F1F1F1;
            color: #222222;
        } @else if $theme == dark {
            background-color: #000000;
            color: #D3D3D3;
        }
    }

    .scroll {
        overflow-y: auto;
    }

    .details {
        font-size: 80%;
        opacity: 0.8;
    }

    .coll-full, .welcome-col-left, .welcome-col-right {
        position: relative;
        width: 100%;
        padding-right: 15px;
        padding-left: 15px;
    }

    .col-full {
        -ms-flex: 0 0 100%;
        flex: 0 0 100%;
        max-width: 100%;
    }

    .welcome-col-left {
        -ms-flex: 0 0 41.666667%;
        flex: 0 0 41.666667%;
        max-width: 41.666667%;

        .list-group-item {
            @if $theme == light {
                background-color: #FFFFFF;
            } @else if $theme == dark {
                background-color: #000000;
            }
        }

        .input-group input {
            @if $theme == light {
                background-color: #FFFFFF;
            } @else if $theme == dark {
                background-color: #D3D3D3;
            }
        }
    }
  

    .welcome-col-right {
        -ms-flex: 0 0 58.333333%;
        flex: 0 0 58.333333%;
        max-width: 58.333333%;
    }
  
}

.react-draggable-transparent-selection .react-grid-item {
  /* These styles prevent text selection during resize drag interactions.
     The react-draggable-transparent-selection class is added to the body 
     element during resizing and removed after resizing has finished.
     Not part of mixin because acts outside of .vitessce-container. */
  -webkit-user-select: none !important;
  -khtml-user-select: none !important;
  -moz-user-select: none !important;
  -o-user-select: none !important;
  user-select: none !important;
}


body {
    margin: 0;
    text-align: left;
}

.container-fluid {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
    box-sizing: border-box;
}